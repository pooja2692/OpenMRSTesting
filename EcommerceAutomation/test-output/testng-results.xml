<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="2" failed="0" skipped="5">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-02-07T23:25:49 GMT-09:00" name="Default suite" finished-at="2022-02-07T23:26:47 GMT-09:00" duration-ms="57201">
    <groups>
    </groups>
    <test started-at="2022-02-07T23:25:49 GMT-09:00" name="Default test" finished-at="2022-02-07T23:26:47 GMT-09:00" duration-ms="57201">
      <class name="LoginFunctionality.VerifyLoginFunctionality">
        <test-method is-config="true" signature="CreateExtent()[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:25:49 GMT-09:00" name="CreateExtent" finished-at="2022-02-07T23:25:50 GMT-09:00" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateExtent -->
        <test-method signature="verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:25:50 GMT-09:00" name="verifyLogin" data-provider="LoginData" finished-at="2022-02-07T23:25:50 GMT-09:00" duration-ms="15" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Verify Invalid login with missing UserName]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Inpatient Ward]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid username/password. Please try again.]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Verify Invalid login with missing UserName Test Skipped. Since marked as no run]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Verify Invalid login with missing UserName Test Skipped. Since marked as no run
at LoginFunctionality.VerifyLoginFunctionality.verifyLogin(VerifyLoginFunctionality.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:25:51 GMT-09:00" name="tearDown" finished-at="2022-02-07T23:25:51 GMT-09:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogin status=SKIP method=VerifyLoginFunctionality.verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:25:51 GMT-09:00" name="verifyLogin" data-provider="LoginData" finished-at="2022-02-07T23:25:51 GMT-09:00" duration-ms="3" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC02]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Verify Invalid login with missing Password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Admn]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Inpatient Ward]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Invalid username/password. Please try again.]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Verify Invalid login with missing Password Test Skipped. Since marked as no run]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Verify Invalid login with missing Password Test Skipped. Since marked as no run
at LoginFunctionality.VerifyLoginFunctionality.verifyLogin(VerifyLoginFunctionality.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:25:51 GMT-09:00" name="tearDown" finished-at="2022-02-07T23:25:51 GMT-09:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogin status=SKIP method=VerifyLoginFunctionality.verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:25:51 GMT-09:00" name="verifyLogin" data-provider="LoginData" finished-at="2022-02-07T23:25:51 GMT-09:00" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC03]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Verify Valid Login]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Inpatient Ward]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Logged in as Super User (admin) at Inpatient Ward.]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Verify Valid Login Test Skipped. Since marked as no run]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Verify Valid Login Test Skipped. Since marked as no run
at LoginFunctionality.VerifyLoginFunctionality.verifyLogin(VerifyLoginFunctionality.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:25:51 GMT-09:00" name="tearDown" finished-at="2022-02-07T23:25:51 GMT-09:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogin status=SKIP method=VerifyLoginFunctionality.verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:25:51 GMT-09:00" name="verifyLogin" data-provider="LoginData" finished-at="2022-02-07T23:25:51 GMT-09:00" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC04]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Verify Inpatent Session After Login]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Inpatient Ward]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Inpatient Ward]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Verify Inpatent Session After Login Test Skipped. Since marked as no run]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Verify Inpatent Session After Login Test Skipped. Since marked as no run
at LoginFunctionality.VerifyLoginFunctionality.verifyLogin(VerifyLoginFunctionality.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:25:51 GMT-09:00" name="tearDown" finished-at="2022-02-07T23:25:51 GMT-09:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogin status=SKIP method=VerifyLoginFunctionality.verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:25:51 GMT-09:00" name="verifyLogin" data-provider="LoginData" finished-at="2022-02-07T23:26:26 GMT-09:00" duration-ms="35245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC05]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Verify Can't Login]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Please contact your System Administrator.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:26:26 GMT-09:00" name="tearDown" finished-at="2022-02-07T23:26:27 GMT-09:00" duration-ms="790" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogin status=SUCCESS method=VerifyLoginFunctionality.verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:26:27 GMT-09:00" name="verifyLogin" data-provider="LoginData" finished-at="2022-02-07T23:26:46 GMT-09:00" duration-ms="19016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC06]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Verify Isolation Ward Session After Login]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[y]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Isolation Ward]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Isolation Ward]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:26:46 GMT-09:00" name="tearDown" finished-at="2022-02-07T23:26:46 GMT-09:00" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogin status=SUCCESS method=VerifyLoginFunctionality.verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:26:46 GMT-09:00" name="verifyLogin" data-provider="LoginData" finished-at="2022-02-07T23:26:46 GMT-09:00" duration-ms="2" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC07]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Verify Laboratory Session After Login]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Laboratory]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Laboratory]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Verify Laboratory Session After Login Test Skipped. Since marked as no run]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Verify Laboratory Session After Login Test Skipped. Since marked as no run
at LoginFunctionality.VerifyLoginFunctionality.verifyLogin(VerifyLoginFunctionality.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:26:46 GMT-09:00" name="tearDown" finished-at="2022-02-07T23:26:46 GMT-09:00" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogin status=SKIP method=VerifyLoginFunctionality.verifyLogin(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushExtent()[pri:0, instance:LoginFunctionality.VerifyLoginFunctionality@17046283]" started-at="2022-02-07T23:26:46 GMT-09:00" name="flushExtent" finished-at="2022-02-07T23:26:47 GMT-09:00" duration-ms="746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushExtent -->
      </class> <!-- LoginFunctionality.VerifyLoginFunctionality -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
